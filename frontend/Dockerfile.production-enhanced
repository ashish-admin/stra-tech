# Enhanced Production Dockerfile for LokDarpan Frontend
# Multi-stage build with runtime configuration injection and Indian network optimization

# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# Copy package files
COPY package*.json ./

# Install dependencies with production optimizations
RUN npm ci --only=production --no-audit --no-fund

# Copy source code
COPY . .

# Build arguments for configuration
ARG NODE_ENV=production
ARG VITE_API_BASE_URL=""
ARG VITE_APP_VERSION=1.0.0

ENV NODE_ENV=$NODE_ENV
ENV VITE_API_BASE_URL=$VITE_API_BASE_URL
ENV VITE_APP_VERSION=$VITE_APP_VERSION

# Build production bundle with optimizations
RUN npm run build

# Production stage with enhanced Nginx
FROM nginx:alpine AS production

# Install runtime utilities
RUN apk add --no-cache \
    curl \
    jq \
    && rm -rf /var/cache/apk/*

# Remove default nginx website
RUN rm -rf /usr/share/nginx/html/*

# Copy built assets from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Create enhanced Nginx configuration with Indian network optimization
COPY --from=builder /app/nginx.conf.template /etc/nginx/templates/default.conf.template

# Create enhanced Nginx configuration
RUN cat > /etc/nginx/conf.d/default.conf << 'EOF'
# Performance optimizations for Indian networks
client_max_body_size 16M;
client_body_buffer_size 128k;
client_header_buffer_size 4k;
large_client_header_buffers 4 32k;

# Compression for slow networks (2G/3G in India)
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_proxied any;
gzip_comp_level 6;
gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/json
    application/javascript
    application/xml+rss
    application/atom+xml
    image/svg+xml;

# Brotli compression (if available)
# load_module modules/ngx_http_brotli_filter_module.so;
# brotli on;
# brotli_comp_level 6;
# brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Security headers for political intelligence platform
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://apis.google.com https://*.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.perplexity.ai https://generativelanguage.googleapis.com wss:;" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Runtime configuration endpoint
    location /config.js {
        default_type application/javascript;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        alias /usr/share/nginx/html/config.js;
    }

    # Static assets with aggressive caching for Indian CDN
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Optimize for slow connections
        location ~* \.(png|jpg|jpeg|gif)$ {
            expires 1M;
            add_header Cache-Control "public, immutable";
            # Enable efficient image serving
            add_header Accept-Ranges bytes;
        }
    }

    # Progressive Web App support
    location /manifest.json {
        expires 1d;
        add_header Cache-Control "public, must-revalidate";
    }

    location /service-worker.js {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Frontend routes with optimized caching for political dashboard
    location / {
        try_files $uri $uri/ /index.html;
        
        # Optimize for campaign team workflows
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        
        # Network-aware loading for Indian connections
        location ~* ^/(dashboard|strategist|trends)/ {
            expires 30m;
            add_header Cache-Control "public, must-revalidate, stale-while-revalidate=3600";
        }
    }

    # API proxy with enhanced error handling
    location /api {
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        
        # Headers for political intelligence API
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Optimized timeouts for AI analysis
        proxy_read_timeout 300s;
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        
        # Buffer optimization for large political datasets
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 32 8k;
        
        # Handle SSE streams for real-time analysis
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache $http_upgrade;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # GeoJSON and ward data optimization
    location /data/ {
        expires 1d;
        add_header Cache-Control "public, must-revalidate";
        gzip_static on;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Security: Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Performance monitoring endpoint
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.0.0.0/8;
        deny all;
    }
}

# WebSocket upgrade support for SSE
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
EOF

# Create configuration injection script
RUN cat > /docker-entrypoint.sh << 'EOF'
#!/bin/sh
set -e

# Generate runtime configuration
cat > /usr/share/nginx/html/config.js << EOL
window.__RUNTIME_CONFIG__ = ${RUNTIME_CONFIG:-'{}'};
EOL

# Inject configuration into index.html
if [ -f "/usr/share/nginx/html/index.html" ]; then
    sed -i 's|</head>|  <script src="/config.js"></script>\n</head>|' /usr/share/nginx/html/index.html
fi

# Start nginx
exec nginx -g 'daemon off;'
EOF

# Create non-root user for security
RUN addgroup -g 1000 -S www-data && \
    adduser -u 1000 -D -S -G www-data www-data

# Set proper permissions
RUN chown -R www-data:www-data /usr/share/nginx/html && \
    chmod +x /docker-entrypoint.sh

# Health check optimized for political intelligence dashboard
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

EXPOSE 80

# Switch to non-root user
USER www-data

ENTRYPOINT ["/docker-entrypoint.sh"]