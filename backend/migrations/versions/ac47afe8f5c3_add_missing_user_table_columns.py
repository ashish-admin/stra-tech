"""Add missing user table columns

Revision ID: ac47afe8f5c3
Revises: 014_comprehensive_ward_performance_optimization
Create Date: 2025-08-20 19:54:03.576287

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ac47afe8f5c3'
down_revision = '013_comprehensive_political_data_seeding'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('embedding', schema=None) as batch_op:
        batch_op.alter_column('vec',
               existing_type=postgresql.BYTEA(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('meta',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)

    with op.batch_alter_table('epaper', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('uq_epaper_sha256'))
        batch_op.create_index(batch_op.f('ix_epaper_sha256'), ['sha256'], unique=True)

    with op.batch_alter_table('issue_cluster', schema=None) as batch_op:
        batch_op.alter_column('keywords',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('uq_post_epaper_id'), postgresql_where='(epaper_id IS NOT NULL)')

    with op.batch_alter_table('summary', schema=None) as batch_op:
        batch_op.alter_column('sections',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::jsonb"))
        batch_op.alter_column('citations',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text("NOW()")))
        batch_op.add_column(sa.Column('last_login', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=False, server_default=sa.text("true")))
        batch_op.add_column(sa.Column('failed_login_attempts', sa.Integer(), nullable=False, server_default=sa.text("0")))
        batch_op.add_column(sa.Column('last_failed_login', sa.DateTime(), nullable=True))
        batch_op.drop_constraint(batch_op.f('uq_user_email'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_user_username'), type_='unique')
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))
        batch_op.create_unique_constraint(batch_op.f('uq_user_username'), ['username'], postgresql_nulls_not_distinct=False)
        batch_op.create_unique_constraint(batch_op.f('uq_user_email'), ['email'], postgresql_nulls_not_distinct=False)
        batch_op.drop_column('last_failed_login')
        batch_op.drop_column('failed_login_attempts')
        batch_op.drop_column('is_active')
        batch_op.drop_column('last_login')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('summary', schema=None) as batch_op:
        batch_op.alter_column('citations',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
        batch_op.alter_column('sections',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::jsonb"))

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('uq_post_epaper_id'), ['epaper_id'], unique=True, postgresql_where='(epaper_id IS NOT NULL)')

    with op.batch_alter_table('issue_cluster', schema=None) as batch_op:
        batch_op.alter_column('keywords',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    with op.batch_alter_table('epaper', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_epaper_sha256'))
        batch_op.create_index(batch_op.f('uq_epaper_sha256'), ['sha256'], unique=True)

    with op.batch_alter_table('embedding', schema=None) as batch_op:
        batch_op.alter_column('meta',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
        batch_op.alter_column('vec',
               existing_type=sa.Text(),
               type_=postgresql.BYTEA(),
               existing_nullable=True)

    # ### end Alembic commands ###
