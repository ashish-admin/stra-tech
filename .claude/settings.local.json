{
  "permissions": {
    "allow": [
      "Bash(git config:*)",
      "Bash(mkdir:*)",
      "Bash(node:*)",
      "Bash(npm run dev:*)",
      "Bash(npm install:*)",
      "Bash(python -m flask run:*)",
      "Bash(npm run build:*)",
      "Bash(curl:*)",
      "Bash(git log:*)",
      "Bash(source:*)",
      "Bash(export FLASK_APP=app:create_app)",
      "Bash(export FLASK_ENV=development)",
      "Bash(export SECRET_KEY=ayra)",
      "Bash(export REDIS_URL=redis://localhost:6379/0)",
      "Bash(export CELERY_BROKER_URL=redis://localhost:6379/0)",
      "Bash(export:*)",
      "Bash(flask run:*)",
      "Bash(python:*)",
      "Bash(venvScripts:*)",
      "Bash(pip install:*)",
      "Bash(./venv/Scripts/activate.bat)",
      "Bash(set FLASK_APP=app:create_app)",
      "Bash(set DATABASE_URL=postgresql://postgres:amuktha@localhost/lokdarpan_db)",
      "Bash(set FLASK_ENV=development)",
      "Bash(set SECRET_KEY=ayra)",
      "Bash(set REDIS_URL=redis://localhost:6379/0)",
      "Bash(set CELERY_BROKER_URL=redis://localhost:6379/0)",
      "Bash(set CELERY_RESULT_BACKEND=redis://localhost:6379/0)",
      "Bash(set:*)",
      "Bash(redis-server:*)",
      "Bash(pip uninstall:*)",
      "Bash(wsl redis-server:*)",
      "Bash(wsl:*)",
      "Bash(findstr:*)",
      "Bash(dir:*)",
      "Bash(timeout 10 curl -N -s -b cookies.txt \"http://localhost:5176/api/v1/strategist/stream?ward=Jubilee%20Hills\")",
      "Read(C:\\Users\\amukt\\Downloads/**)",
      "Read(C:\\Users\\amukt\\Downloads/**)",
      "Read(C:\\Users\\amukt\\Downloads/**)",
      "Bash(cat:*)",
      "Read(C:\\Users\\amukt\\Downloads/**)",
      "Bash(GEMINI_API_KEY=$GEMINI_API_KEY python -c \"\nimport os\nprint(f''GEMINI_API_KEY in environment: {\"\"Set\"\" if os.getenv(\"\"GEMINI_API_KEY\"\") else \"\"Not set\"\"}'')\nfrom strategist.service import get_ward_report\nprint(''Testing with proper environment...'')\ntry:\n    data, etag, ttl = get_ward_report(''Jubilee Hills'', ''quick'')\n    print(''SUCCESS: Function returned data'')\n    if data.get(''fallback_mode''):\n        print(''NOTICE: Running in fallback mode'')\n    else:\n        print(''NOTICE: AI analysis successful'')\nexcept Exception as e:\n    print(f''ERROR: {e}'')\n\")",
      "Bash(find:*)",
      "Read(C:\\c\\Users\\amukt\\Projects\\LokDarpan\\backend\\migrations/**)",
      "Bash(flask db migrate:*)",
      "Bash(flask db:*)",
      "Bash(psql:*)",
      "Bash(timeout:*)",
      "Bash(git add:*)",
      "Bash(git rm:*)",
      "Bash(git commit:*)",
      "Bash(gh:*)",
      "Bash(yamllint:*)",
      "Bash(npm test:*)",
      "Bash(mv:*)",
      "Bash(grep:*)",
      "Bash(npx playwright test:*)",
      "Bash(npx playwright:*)",
      "Bash(taskkill:*)",
      "Bash(pkill:*)",
      "Bash(redis-cli:*)",
      "Bash(sc query:*)",
      "Bash(where psql)",
      "Read(C:\\Program Files\\PostgreSQL\\16\\bin/**)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "Bash(unzip:*)",
      "Bash(powershell:*)",
      "Bash(claude doctor)",
      "Bash(choco:*)",
      "Bash(winget:*)",
      "Bash(docker:*)",
      "Bash(./redis-cli.exe:*)",
      "Bash(PYTHONPATH=. python scripts/reseed_demo_data.py)",
      "WebFetch(domain:docs.perplexity.ai)",
      "Bash(copy App.jsx App.jsx.status)",
      "Bash(npm update:*)",
      "Bash(for i in {1..3})",
      "Bash(do)",
      "Bash(echo:*)",
      "Bash(time:*)",
      "Bash(done)",
      "mcp__ide__getDiagnostics",
      "Bash(npm --prefix frontend run build)",
      "Read(C:\\Program Files\\PostgreSQL\\16\\bin/**)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\16\\bin\\psql.exe\" -U postgres -d lokdarpan_db -c \"SELECT count(*) FROM information_schema.tables WHERE table_schema = ''public'';\")",
      "Bash(./redis-server.exe)",
      "Bash(celery:*)",
      "Read(C:\\Users\\amukt\\Downloads/**)",
      "Read(C:\\Users\\amukt\\Downloads/**)",
      "Read(C:\\Users\\amukt\\Downloads/**)",
      "Read(C:\\Users\\amukt\\Downloads/**)",
      "Read(C:\\Users\\amukt\\Downloads/**)",
      "Read(C:\\Users\\amukt\\Downloads/**)",
      "Bash(pip freeze)",
      "Bash(call venvScriptsactivate.bat)",
      "Bash(start-backend.bat)",
      "WebFetch(domain:localhost)",
      "Bash(sed:*)",
      "Bash(git fetch:*)",
      "Bash(git push:*)",
      "Bash(git check-ignore:*)",
      "Bash(cp:*)",
      "Bash(call venv/Scripts/activate.bat)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\16\\bin\\psql.exe\" -U postgres -d lokdarpan_db -c \"SELECT count(*) FROM information_schema.tables WHERE table_schema = ''public'';\")",
      "Bash(cmd:*)",
      "Bash(. ./venv/Scripts/activate)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\c\\Users\\amukt\\Projects",
      "C:\\c\\Users\\amukt\\Projects\\LokDarpan",
      "C:\\mnt\\c\\Users\\amukt\\Projects\\LokDarpan"
    ]
  }
}