name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        shard: [1/4, 2/4, 3/4, 4/4]
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: lokdarpan_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'backend/requirements.txt'
      
      - name: Install Python dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Install Node.js dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Install Playwright browsers
        run: |
          cd frontend
          npx playwright install --with-deps
      
      - name: Setup test database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/lokdarpan_test_db
          FLASK_ENV: testing
        run: |
          cd backend
          python -c "from app import create_app, db; app = create_app(); app.app_context().push(); db.create_all()"
          python scripts/seed_minimal_ward.py || echo "Seeding script not found, continuing..."
      
      - name: Start backend server
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/lokdarpan_test_db
          REDIS_URL: redis://localhost:6379/0
          FLASK_ENV: testing
          SECRET_KEY: test-secret-key
          GEMINI_API_KEY: test-key
          NEWS_API_KEY: test-key
          STRATEGIST_ENABLED: "false"
        run: |
          cd backend
          nohup python -m flask run --host=0.0.0.0 --port=5000 &
          sleep 10
          curl --retry 30 --retry-delay 1 --retry-connrefused http://localhost:5000/api/v1/status
      
      - name: Start frontend server
        env:
          VITE_API_BASE_URL: http://localhost:5000
        run: |
          cd frontend
          nohup npm run dev -- --host=0.0.0.0 --port=5173 &
          sleep 10
          curl --retry 30 --retry-delay 1 --retry-connrefused http://localhost:5173
      
      - name: Run E2E tests
        env:
          CI: true
        run: |
          cd frontend
          if [ -f playwright.config.js ]; then
            npx playwright test --project=${{ matrix.browser }} --shard=${{ matrix.shard }} --reporter=html,junit,github
          else
            echo "Playwright config not found, skipping E2E tests"
            exit 0
          fi
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.browser }}-${{ matrix.shard }}
          path: |
            test-results/
            frontend/test-results/
          retention-days: 7
      
      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: html-report-${{ matrix.browser }}-${{ matrix.shard }}
          path: |
            test-results/html/
            frontend/playwright-report/
          retention-days: 7
      
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots-${{ matrix.browser }}-${{ matrix.shard }}
          path: test-results/screenshots/
          retention-days: 7

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [e2e-tests]
    if: always()
    
    steps:
      - name: Generate test summary
        run: |
          echo "## E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- 🖥️  Dashboard Component Testing" >> $GITHUB_STEP_SUMMARY
          echo "- 🧩 Individual Component Testing" >> $GITHUB_STEP_SUMMARY
          echo "- 🔄 User Interaction Workflows" >> $GITHUB_STEP_SUMMARY
          echo "- 🚨 Error Boundary Validation" >> $GITHUB_STEP_SUMMARY
          echo "- ⚡ Performance & Core Web Vitals" >> $GITHUB_STEP_SUMMARY